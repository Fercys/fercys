{"remainingRequest":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/babel-loader/lib/index.js!/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fercys/Documentos/Argentina/europeshuttle_rhombus/src/components/WorldMap/WorldMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/src/components/WorldMap/WorldMap.vue","mtime":1563064259706},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\nimport 'd3';\nimport * as d3 from 'd3';\nimport 'topojson';\nimport { throttle } from '@/util/throttle';\nexport default {\n  name: 'world-map',\n  props: {\n    mapData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    points: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      id: this.randomString(),\n      color1: '#f6f9fc',\n      color2: '#adb5bd',\n      highlightFillColor: '#ced4da',\n      borderColor: 'white',\n      highlightBorderColor: 'white',\n      bubbleHighlightFillColor: '#11cdef',\n      bubbleFillColor: '#fb6340'\n    };\n  },\n  methods: {\n    generateColors: function generateColors(length) {\n      return d3.scaleLinear().domain([0, length]).range([this.color1, this.color2]);\n    },\n    generateMapColors: function generateMapColors() {\n      var mapDataValues = Object.values(this.mapData);\n      var maxVal = Math.max.apply(Math, _toConsumableArray(mapDataValues));\n      var colors = this.generateColors(maxVal);\n      var mapData = {};\n      var fills = {\n        defaultFill: '#EDF0F2'\n      };\n\n      for (var key in this.mapData) {\n        var val = this.mapData[key];\n        fills[key] = colors(val);\n        mapData[key] = {\n          fillKey: key,\n          value: val\n        };\n      }\n\n      return {\n        mapData: mapData,\n        fills: fills\n      };\n    },\n    initVectorMap: function () {\n      var _initVectorMap = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var DataMap, _this$generateMapColo, fills, mapData, worldMap, bubbleOptions, bubblePoints, resizeFunc;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import('datamaps');\n\n              case 2:\n                DataMap = _context.sent;\n                DataMap = DataMap.default || DataMap;\n                _this$generateMapColo = this.generateMapColors(), fills = _this$generateMapColo.fills, mapData = _this$generateMapColo.mapData;\n                worldMap = new DataMap({\n                  scope: 'world',\n                  element: document.getElementById(this.id),\n                  fills: fills,\n                  data: mapData,\n                  responsive: true,\n                  geographyConfig: {\n                    borderColor: this.borderColor,\n                    borderWidth: 1,\n                    borderOpacity: 1,\n                    highlightFillColor: this.highlightFillColor,\n                    highlightBorderColor: this.highlightBorderColor,\n                    highlightBorderWidth: 1,\n                    highlightBorderOpacity: 1\n                  }\n                });\n                bubbleOptions = {\n                  radius: 2,\n                  borderWidth: 4,\n                  highlightBorderWidth: 4,\n                  fillKey: this.bubbleFillColor,\n                  fillColor: this.bubbleFillColor,\n                  borderColor: this.bubbleFillColor,\n                  highlightFillColor: this.bubbleHighlightFillColor,\n                  highlightBorderColor: this.bubbleHighlightFillColor\n                };\n                bubblePoints = this.points.map(function (point) {\n                  return _objectSpread({}, bubbleOptions, {}, point);\n                });\n                worldMap.bubbles(bubblePoints, {\n                  popupTemplate: function popupTemplate(geo, data) {\n                    return '<div class=\"hoverinfo\">' + data.name;\n                  }\n                });\n                resizeFunc = worldMap.resize.bind(worldMap);\n                window.addEventListener('resize', function () {\n                  throttle(resizeFunc, 40);\n                }, false);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initVectorMap() {\n        return _initVectorMap.apply(this, arguments);\n      }\n\n      return initVectorMap;\n    }(),\n    randomString: function randomString() {\n      var text = \"\";\n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n      for (var i = 0; i < 5; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.initVectorMap();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["WorldMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :id=\"id\" class=\"world-map\"></div>\n</template>\n<script>\nimport 'd3';\nimport * as d3 from 'd3';\nimport 'topojson';\nimport { throttle } from '@/util/throttle';\n\nexport default {\n  name: 'world-map',\n  props: {\n    mapData: {\n      type: Object,\n      default: () => ({})\n    },\n    points: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      id: this.randomString(),\n      color1: '#f6f9fc',\n      color2: '#adb5bd',\n      highlightFillColor: '#ced4da',\n      borderColor: 'white',\n      highlightBorderColor: 'white',\n      bubbleHighlightFillColor: '#11cdef',\n      bubbleFillColor: '#fb6340'\n    };\n  },\n  methods: {\n    generateColors(length) {\n      return d3\n        .scaleLinear()\n        .domain([0, length])\n        .range([this.color1, this.color2]);\n    },\n    generateMapColors() {\n      let mapDataValues = Object.values(this.mapData);\n      let maxVal = Math.max(...mapDataValues);\n      let colors = this.generateColors(maxVal);\n      let mapData = {};\n      let fills = {\n        defaultFill: '#EDF0F2'\n      };\n      for (let key in this.mapData) {\n        let val = this.mapData[key];\n        fills[key] = colors(val);\n        mapData[key] = {\n          fillKey: key,\n          value: val\n        };\n      }\n      return {\n        mapData,\n        fills\n      };\n    },\n    async initVectorMap() {\n      let DataMap = await import('datamaps');\n      DataMap = DataMap.default || DataMap\n      let { fills, mapData } = this.generateMapColors();\n      let worldMap = new DataMap({\n        scope: 'world',\n        element: document.getElementById(this.id),\n        fills,\n        data: mapData,\n        responsive: true,\n        geographyConfig: {\n          borderColor: this.borderColor,\n          borderWidth: 1,\n          borderOpacity: 1,\n          highlightFillColor: this.highlightFillColor,\n          highlightBorderColor: this.highlightBorderColor,\n          highlightBorderWidth: 1,\n          highlightBorderOpacity: 1\n        }\n      });\n      let bubbleOptions = {\n        radius: 2,\n        borderWidth: 4,\n        highlightBorderWidth: 4,\n        fillKey: this.bubbleFillColor,\n        fillColor: this.bubbleFillColor,\n        borderColor: this.bubbleFillColor,\n        highlightFillColor: this.bubbleHighlightFillColor,\n        highlightBorderColor: this.bubbleHighlightFillColor\n      }\n      let bubblePoints = this.points.map(point => {\n        return {\n          ...bubbleOptions,\n          ...point\n        }\n      })\n      worldMap.bubbles(bubblePoints, {\n        popupTemplate: function(geo, data) {\n          return '<div class=\"hoverinfo\">' + data.name\n        }\n      });\n      let resizeFunc = worldMap.resize.bind(worldMap);\n      window.addEventListener(\n        'resize',\n        () => {\n          throttle(resizeFunc, 40);\n        },\n        false\n      );\n    },\n    randomString() {\n      let text = \"\";\n      let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n      for (let i = 0; i < 5; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n      return text;\n    }\n  },\n  async mounted() {\n    this.initVectorMap();\n  }\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/components/WorldMap"}]}