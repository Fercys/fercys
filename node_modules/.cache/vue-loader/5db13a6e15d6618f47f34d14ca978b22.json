{"remainingRequest":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fercys/Documentos/Argentina/europeshuttle_rhombus/src/components/Inputs/TagsInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/src/components/Inputs/TagsInput.vue","mtime":1563064259706},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fercys/Documentos/Argentina/europeshuttle_rhombus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Tag } from 'element-ui';\n\nexport default {\n  name: 'tags-input',\n  components: {\n    [Tag.name]: Tag\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => [],\n      description: 'List of tags'\n    },\n    tagType: {\n      type: String,\n      default: 'primary',\n      description: 'Tag type (primary|danger etc)'\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  data() {\n    return {\n      dynamicTags: [],\n      inputVisible: false,\n      inputValue: ''\n    };\n  },\n  methods: {\n    handleClose(tag) {\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n      this.$emit('change', this.dynamicTags);\n    },\n    showInput() {\n      this.inputVisible = true;\n      this.$nextTick(() => {\n        this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.dynamicTags.push(inputValue);\n        this.$emit('change', this.dynamicTags);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    },\n    onInput(evt) {\n      this.$emit('input', evt.target.value);\n    }\n  },\n  created() {\n    this.$watch(\n      'value',\n      newVal => {\n        this.dynamicTags = [...newVal];\n      },\n      { immediate: true }\n    );\n  }\n};\n",{"version":3,"sources":["TagsInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TagsInput.vue","sourceRoot":"src/components/Inputs","sourcesContent":["<template>\n  <div class=\"tags-input__wrapper\">\n    <el-tag\n      v-for=\"(tag, index) in dynamicTags\"\n      :key=\"tag + index\"\n      size=\"small\"\n      :type=\"tagType\"\n      :closable=\"true\"\n      :close-transition=\"false\"\n      @close=\"handleClose(tag)\"\n    >\n      {{ tag }}\n    </el-tag>\n\n    <input\n      type=\"text\"\n      placeholder=\"Add new tag\"\n      class=\"form-control\"\n      v-model=\"inputValue\"\n      ref=\"saveTagInput\"\n      size=\"mini\"\n      @input=\"onInput\"\n      @keyup.enter=\"handleInputConfirm\"\n      @blur=\"handleInputConfirm\"\n    />\n  </div>\n</template>\n\n<script>\nimport { Tag } from 'element-ui';\n\nexport default {\n  name: 'tags-input',\n  components: {\n    [Tag.name]: Tag\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => [],\n      description: 'List of tags'\n    },\n    tagType: {\n      type: String,\n      default: 'primary',\n      description: 'Tag type (primary|danger etc)'\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  data() {\n    return {\n      dynamicTags: [],\n      inputVisible: false,\n      inputValue: ''\n    };\n  },\n  methods: {\n    handleClose(tag) {\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n      this.$emit('change', this.dynamicTags);\n    },\n    showInput() {\n      this.inputVisible = true;\n      this.$nextTick(() => {\n        this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.dynamicTags.push(inputValue);\n        this.$emit('change', this.dynamicTags);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    },\n    onInput(evt) {\n      this.$emit('input', evt.target.value);\n    }\n  },\n  created() {\n    this.$watch(\n      'value',\n      newVal => {\n        this.dynamicTags = [...newVal];\n      },\n      { immediate: true }\n    );\n  }\n};\n</script>\n"]}]}